
info:
  groupId: @project.groupId@
  artifactId: @project.artifactId@
  version: @project.version@

spring:
    profiles:
        active: dev #指定环境
    jackson:
        serialization.indent_output: true
    devtools:
        restart:
            enabled: true
        livereload:
            enabled: false # we use gulp + BrowserSync for livereload
#监控
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    shutdown:
      enabled: true

eureka:
    instance:
        appname: yzj-registry #服务名，默认取 spring.application.name 配置值，如果没有则为 unknown
        prefer-ip-address: true #不使用主机名来定义注册中心的地址，而使用IP地址的形式，如果设置了 eureka.instance.ip-address 属性，则使用该属性配置的IP，否则自动获取除环路IP外的第一个IP地址
    client:
        registerWithEureka: false # 实例是否在eureka服务器上注册自己的信息以供其他服务发现，默认为true
        fetchRegistry: false #此客户端是否获取eureka服务器注册表上的注册信息，默认为true
    server:
        enable-self-preservation: false #不使用自我保护（自我保护默认开启，Eureka服务器15分钟内心跳成功比例低于85%，则触发自我保护机制，不剔除任何注册的服务信息，直至心跳成功数大于85%，本地频繁调试，故而关闭该功能）
        eviction-interval-timer-in-ms: 15000 #扫描失效服务时间间隔（单位毫秒，默认60*1000）60秒
        wait-time-in-ms-when-sync-empty: 0 #设置eureka server同步失败的等待时间，默认5分钟，在这期间它不向客户端提供服务注册信息
        a-sgcache-expiry-timeout-ms: 60000 #缓存ASG信息的到期时间，单位为毫秒，默认为10 * 60 * 1000
        renewal-threshold-update-interval-ms: 90000 #  阈值更新的时间间隔，单位为毫秒，默认为15 * 60 * 1000


server:
    port: 8761
    undertow:
        # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
        io-threads: 4
        # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
        worker-threads: 20
        # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
        # 每块buffer的空间大小,越小的空间被利用越充分
        buffer-size: 1024
        # 是否分配的直接内存
        direct-buffers: true


